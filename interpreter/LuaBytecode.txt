function sumUp (a)
    local sum = 0
    for i,v in ipairs(a) do
        sum = sum + v
    end
    return sum
end


function addOne(a)
    return a + 1
end

function doubleAdd(a, b)
    return 2*(a + b)
end

function mainMy()
    local x = 0
    local y = addOne(x)
    local z = 150
    local aa = doubleAdd(y, z)
    print(aa)
end

mainMy()





main <hw.lua:0,0> (12 instructions at 0x12c804110)
0+ params, 2 slots, 1 upvalue, 0 locals, 4 constants, 4 functions
	1	[1]	VARARGPREP	0
	2	[7]	CLOSURE  	0 0	; 0x12c8042c0
	3	[1]	SETTABUP 	0 0 0	; _ENV "sumUp"
	4	[12]	CLOSURE  	0 1	; 0x12c804950
	5	[10]	SETTABUP 	0 1 0	; _ENV "addOne"
	6	[16]	CLOSURE  	0 2	; 0x12c8049d0
	7	[14]	SETTABUP 	0 2 0	; _ENV "doubleAdd"
	8	[24]	CLOSURE  	0 3	; 0x12c8046b0
	9	[18]	SETTABUP 	0 3 0	; _ENV "main"
	10	[26]	GETTABUP 	0 0 3	; _ENV "main"
	11	[26]	CALL     	0 1 1	; 0 in 0 out
	12	[26]	RETURN   	0 1 1	; 0 out
Upvalues:
index	name	instack	idx	kind
0	_ENV	true	0	VDKREG (regular)
Constants:
0	string	"sumUp"
1	string	"addOne"
2	string	"doubleAdd"
3	string	"mainMy"

sumUp <hw.lua:1,7>  (12 instructions at 0x12c8042c0)
1 param, 9 slots, 1 upvalue, 8 locals, 1 constant, 0 functions
	1	[2]	LOADI    	1 0
	2	[3]	GETTABUP 	2 0 0	; _ENV "ipairs"
	3	[3]	MOVE     	3 0
	4	[3]	CALL     	2 2 5	; 1 in 4 out
	5	[3]	TFORPREP 	2 2	; to 8
	6	[4]	ADD      	1 1 7
	7	[4]	MMBIN    	1 7 6	; __add
	8	[3]	TFORCALL 	2 2
	9	[3]	TFORLOOP 	2 4	; to 6
	10	[5]	CLOSE    	2
	11	[6]	RETURN   	1 2 0	; 1 out
	12	[7]	RETURN   	2 1 0	; 0 out
Constants
0	string	"ipairs"

Locals
index	name	startpc	endpc
0	a	1	13
1	sum	2	13
2	(for state)	5	11
3	(for state)	5	11
4	(for state)	5	11
5	(for state)	5	11
6	i	6	8
7	v	6	8

addOne <hw.lua:10,12> (4 instructions at 0x12c804950)
1 param, 2 slots, 0 upvalues, 1 local, 0 constants, 0 functions
	1	[11]	ADDI     	1 0 1   ; R1 = R0 + 1
	2	[11]	MMBINI   	0 1 6 0	; __add # Meth6 R0 1
	3	[11]	RETURN1  	1
	4	[12]	RETURN0
Locals
index	name	startpc	endpc
0	a	1	5


doubleAdd <hw.lua:14,16> (6 instructions at 0x12c8049d0)
2 params, 3 slots, 0 upvalues, 2 locals, 1 constant, 0 functions
	1	[15]	ADD      	2 0 1   ; R2 = R0 + R1
	2	[15]	MMBIN    	0 1 6	; __add        # Meth6(R0 R1)
	3	[15]	MULK     	2 2 0	; 2            # R2 = R2*K0
	4	[15]	MMBINK   	2 0 8 1	; __mul 2 flip # Meth8(R2 K0) 1?
	5	[15]	RETURN1  	2       # return R2
	6	[16]	RETURN0
Constants
0	integer	2
Locals
0	a	1	7
1	b	1	7

mainMy <hw.lua:18,24> (13 instructions at 0x12c8046b0)
0 params, 6 slots, 1 upvalue, 4 locals, 3 constants, 0 functions
	1	[19]	LOADI    	0 0
	2	[20]	GETTABUP 	1 0 0	; _ENV "addOne"
	3	[20]	MOVE     	2 0
	4	[20]	CALL     	1 2 2	; 1 in 1 out
	5	[21]	LOADI    	2 150
	6	[22]	GETTABUP 	3 0 1	; _ENV "doubleAdd"
	7	[22]	MOVE     	4 1
	8	[22]	MOVE     	5 2
	9	[22]	CALL     	3 3 2	; 2 in 1 out
	10	[23]	GETTABUP 	4 0 2	; _ENV "print"
	11	[23]	MOVE     	5 3
	12	[23]	CALL     	4 2 1	; 1 in 0 out
	13	[24]	RETURN0
Constants
0	string	"addOne"
1	string	"doubleAdd"
2	string	"print"
Locals
index	name	startpc	endpc
0	x	2	14
1	y	5	14
2	z	6	14
3	aa	10	14
